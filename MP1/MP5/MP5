section .bss
    buffer resb 1

section .data
    newline db 10

section .text
    global _start

_start:
    mov eax, 3           
    mov ebx, 0           
    mov ecx, buffer      
    mov edx, 1           
    int 0x80             

    cmp byte [buffer], 'a'
    jl check_uppercase
    cmp byte [buffer], 'z'
    jg check_uppercase

    sub byte [buffer], 32
    jmp print

check_uppercase:
    cmp byte [buffer], 'A'
    jl print
    cmp byte [buffer], 'Z'
    jg print

    add byte [buffer], 32

print:
    mov eax, 4           
    mov ebx, 1          
    mov ecx, buffer      
    mov edx, 1  
    int 0x80    

    mov eax, 4           
    mov ebx, 1          
    mov ecx, newline     
    mov edx, 1  
    int 0x80    

    mov eax, 1           
    xor ebx, ebx         
    int 0x80
